---
resource_types:
- name: toolsmiths-cf-pool
  type: docker-image
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource

resources:
- name: relint-envs
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/relint-envs.git
    private_key: ((hagrid_env_readwrite_deploy_key.private_key))

- name: cf-deployment-concourse-tasks
  type: git
  icon: github
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: runtime-ci
  type: git
  icon: github
  source:
    uri: https://github.com/cloudfoundry/runtime-ci.git

- name: cf-acceptance-tests
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/cf-acceptance-tests.git
    branch: release-candidate
    private_key: ((cf_acceptance_tests_readwrite_deploy_key.private_key))

- name: cf-deployment
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/cf-deployment.git
    branch: release-candidate
    private_key: ((cf_deployment_readwrite_deploy_key.private_key))

- name: toolsmiths-env
  type: toolsmiths-cf-pool
  icon: pool
  source:
    hostname: environments.toolsmiths.cf-app.com
    api_token: ((toolsmiths_api_token))
    pool_name: cf-deployment

- name: bionic-stemcell
  type: bosh-io-stemcell
  icon: dna
  source:
    name: bosh-google-kvm-ubuntu-bionic-go_agent

jobs:
- name: claim-env
  # TODO: make public when the toolsmiths-env resource stops leaking creds
  #public: true
  serial: true
  plan:
  - get: bionic-stemcell
    trigger: true

  - put: toolsmiths-env
    params:
      action: claim
    timeout: 4h

- name: deploy-cf
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: toolsmiths-env
      passed:
      - claim-env
      trigger: true
    - get: bionic-stemcell
      passed:
      - claim-env
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci

  - task: bosh-delete-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    params:
      IGNORE_ERRORS: true

  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml

  - task: upload-bionic-stemcell
    file: runtime-ci/tasks/bosh-upload-stemcell/task.yml
    input_mapping:
      stemcell: bionic-stemcell

  - task: update-dns-runtime-config
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: toolsmiths-env
      - name: cf-deployment-concourse-tasks
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars

          cat <<EOT > /tmp/add-bionic.yml
          ---
          - type: replace
            path: /addons/name=bosh-dns/include/stemcell/-
            value:
              os: ubuntu-bionic
          EOT

          bosh runtime-config --name=dns > /tmp/dns.yml
          bosh interpolate -o /tmp/add-bionic.yml /tmp/dns.yml > /tmp/updated-dns.yml
          bosh -n update-runtime-config --name=dns /tmp/updated-dns.yml

  - task: deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      ops-files: cf-deployment
    params:
      OPS_FILES: |
        operations/experimental/use-bionic-stemcell.yml
        operations/use-internal-lookup-for-route-services.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml

  - in_parallel:
    - task: open-asgs-for-credhub
      file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
      params:
        INSTANCE_GROUP_NAME: credhub
        SECURITY_GROUP_NAME: credhub

    - task: open-asgs-for-uaa
      file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
      params:
        INSTANCE_GROUP_NAME: uaa
        SECURITY_GROUP_NAME: uaa

    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      params:
        ENABLED_FEATURE_FLAGS: |
          diego_docker
          task_creation
          service_instance_sharing

- name: run-smoke-tests
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: toolsmiths-env
      passed:
      - deploy-cf
      trigger: true
    - get: cf-deployment-concourse-tasks

  - task: bosh-run-errand-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first

- name: run-cats
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: toolsmiths-env
      passed:
      - run-smoke-tests
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: cf-acceptance-tests
    - get: relint-envs

  - task: create-integration-config
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: toolsmiths-env
      outputs:
      - name: integration-configs
      params:
        GIT_COMMIT_EMAIL: "cf-release-integration@pivotal.io"
        GIT_COMMIT_USERNAME: "CI Bot"
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          source cf-deployment-concourse-tasks/shared-functions

          DOMAIN="$(jq -r '.cf.api_url' toolsmiths-env/metadata | cut -d. -f2-)"

          pushd integration-configs > /dev/null
          git init
          set_git_config

          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": 1,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT

          git add .
          git commit -m "Create integration config"

  - task: update-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json

  - task: run-cats
    file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
    params:
      CONFIG_FILE_PATH: integration-config.json

- name: unclaim-env
  serial: true
  # TODO: make public when the toolsmiths-env resource stops leaking creds
  #public: true
  plan:
  - get: toolsmiths-env
    passed:
    - run-cats
    trigger: true

  - put: toolsmiths-env
    params:
      action: unclaim
      env_file: toolsmiths-env/metadata
